<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:p="http://www.springframework.org/schema/p" 
    xsi:schemaLocation=" 
            http://www.springframework.org/schema/beans      
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
            http://www.springframework.org/schema/tx  
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context-3.0.xsd"> 

	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- ========================= GENERAL DEFINITIONS ========================= -->
	<!-- Configurer that replaces ${...} placeholders with values from properties 
		files -->
	<!-- (in this case, mail and JDBC related properties) -->
	
	<bean id="persistence.propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
				<value>classpath:jdbc.properties</value>
		</property>
	</bean>

	<bean id="persistence.dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="initialSize" value="20" />
		<property name="maxActive" value="30" />
		<property name="maxIdle" value="25" />
	</bean>

	<!-- Defines a global session factory that will be used by all modules. -->
	<bean id="persistence.sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">

		<property name="dataSource" ref="persistence.dataSource" />
		<property name="packagesToScan" value="com.unq.estip.pada.model" />
		<property name="hibernateProperties">
			<props>
				<!-- Configuration generic properties. They are loaded from file hibernate.properties -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
<!-- 				<prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory -->
<!-- 				</prop> -->
			</props>
		</property>

	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
		<property name="jdbcExceptionTranslator" ref="persistence.jdbcExceptionTranslator" />
	</bean>

	<bean name="persistence.jdbcExceptionTranslator"
		class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator">
		<constructor-arg>
			<ref bean="persistence.dataSource" />
		</constructor-arg>
	</bean>


	<!-- ________________________________________ -->
	<!-- ______________ Model Beans______________ -->
	<!-- ________________________________________ -->

	<!-- PRODUCT -->
	<bean id="productDao" class="com.unq.estip.pada.persistence.ProductDAO">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	<bean id="productService" class="com.unq.estip.pada.service.ProductService">
		<property name="productDAO" ref="productDao" />
	</bean>
	<bean id="productRest" class="com.unq.estip.pada.rest.ProductRest">
		<property name="productService" ref="productService" />
	</bean>
	
	<!-- CLIENT -->
	<bean id="clientDAO" class="com.unq.estip.pada.persistence.ClientDAO">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	<bean id="clientService" class="com.unq.estip.pada.service.ClientService">
		<property name="clientDAO" ref="clientDAO" />
	</bean>
	<bean id="clientRest" class="com.unq.estip.pada.rest.ClientRest">
		<property name="clientService" ref="clientService" />
	</bean>
	
	<!-- SALE PRODUCT-->
	<bean id="saleProductDAO" class="com.unq.estip.pada.persistence.SaleProductDAO">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	
	<!-- SALE -->
	<bean id="saleDAO" class="com.unq.estip.pada.persistence.SaleDAO">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	<bean id="saleService" class="com.unq.estip.pada.service.SaleService">
		<property name="saleDAO" ref="saleDAO" />
		<property name="clientDAO" ref="clientDAO" />
		<property name="productDAO" ref="productDao" />
		<property name="saleProductDAO" ref="saleProductDAO" />
	</bean>
	<bean id="saleRest" class="com.unq.estip.pada.rest.SaleRest">
		<property name="saleService" ref="saleService" />
	</bean>
	
	<!-- STORES -->
	<bean id="storeDAO" class="com.unq.estip.pada.persistence.StoreDAO">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	<bean id="storeService" class="com.unq.estip.pada.service.StoreService">
		<property name="storeDAO" ref="storeDAO" />
	</bean>
	<bean id="storeRest" class="com.unq.estip.pada.rest.StoresRest">
		<property name="storeService" ref="storeService" />
	</bean>

	<!-- PURCHASE -->
	<bean id="purchaseDAO" class="com.unq.estip.pada.persistence.PurchaseDAO">
		<property name="sessionFactory" ref="persistence.sessionFactory" />
	</bean>
	<bean id="purchaseService" class="com.unq.estip.pada.service.PurchaseService">
		<property name="purchaseDAO" ref="purchaseDAO" />
		<property name="storeDAO" ref="storeDAO" />
	</bean>
	<bean id="purchaseRest" class="com.unq.estip.pada.rest.PurchaseRest">
		<property name="purchaseService" ref="purchaseService" />
	</bean>
	
	<!-- LOGIN -->
	<bean id="loginRest" class="com.unq.estip.pada.rest.LoginRest">
<!-- 		<property name="sessionFactory" ref="persistence.sessionFactory" /> -->
	</bean>
	

</beans>